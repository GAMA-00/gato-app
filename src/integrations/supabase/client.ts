
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

export const SUPABASE_URL = "https://jckynopecuexfamepmoh.supabase.co";
export const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Impja3lub3BlY3VleGZhbWVwbW9oIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU0MzQ1ODAsImV4cCI6MjA2MTAxMDU4MH0.kcS5mx6kSrYqJmU3JIDizIXXsBItQVgxqD2mOa13oqE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: false,
      storage: localStorage,
      flowType: 'pkce'
    },
    global: {
      headers: {
        'Content-Type': 'application/json',
        'X-Client-Info': 'lovable-app'
      }
    }
  }
);

// Debug helper to detect rate limit errors during signup
export const debugSignUp = async (email: string, password: string, userData: any) => {
  try {
    const { data, error } = await supabase.auth.signUp({
      email,
      password,
      options: { data: userData }
    });
    
    if (error) {
      console.error('Signup debug error:', {
        message: error.message,
        status: error.status,
        name: error.name
      });
      
      if (error.status === 429) {
        // Rate limit error handling
        console.warn('Rate limit detected. Clearing any partial auth state...');
        // Make sure we don't leave partial state
        await supabase.auth.signOut();
      }
    }
    
    return { data, error };
  } catch (e) {
    console.error('Unexpected signup error:', e);
    return { data: null, error: e as Error };
  }
};
